{"version":3,"sources":["base64.js","webauthn.js","passwordless-sdk.js"],"names":["Base64","exports","lookup","Arr","Uint8Array","Array","PLUS","charCodeAt","SLASH","NUMBER","LOWER","UPPER","decode","elt","code","toByteArray","b64ToByteArray","b64","i","j","l","tmp","placeHolders","arr","length","Error","len","charAt","L","push","v","fromByteArray","uint8ToBase64","uint8","temp","num","extraBytes","output","encode","settings","host","apiUrl","bufferDecode","value","from","atob","c","bufferEncode","replace","processError","e","console","log","toString","startRegistration","login","targetUrl","fetch","credentials","then","res","json","challenge","processRegisterChallenge","catch","JSON","stringify","user","id","navigator","create","publicKey","credential","register","attestationObject","response","clientDataJSON","rawId","postData","type","method","headers","body","startLogin","processLoginChallenge","allowCredentials","forEach","allowCredential","get","assertion","assert","authenticatorData","signature","userHandle","init","initSettings","webauthn"],"mappings":"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","file":"passwordless-sdk.js","sourceRoot":"../../../frontend/js","sourcesContent":["var Base64 = {};\n\n(function (exports) {\n\n    var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n    'use strict';\n\n    var Arr = (typeof Uint8Array !== 'undefined')\n        ? Uint8Array\n        : Array;\n\n    var PLUS   = '+'.charCodeAt(0);\n    var SLASH  = '/'.charCodeAt(0);\n    var NUMBER = '0'.charCodeAt(0);\n    var LOWER  = 'a'.charCodeAt(0);\n    var UPPER  = 'A'.charCodeAt(0);\n\n    function decode (elt) {\n        var code = elt.charCodeAt(0);\n        if (code === PLUS)\n            return 62; // '+'\n        if (code === SLASH)\n            return 63; // '/'\n        if (code < NUMBER)\n            return -1; //no match\n        if (code < NUMBER + 10)\n            return code - NUMBER + 26 + 26;\n        if (code < UPPER + 26)\n            return code - UPPER;\n        if (code < LOWER + 26)\n            return code - LOWER + 26\n    }\n\n    function b64ToByteArray (b64) {\n        var i, j, l, tmp, placeHolders, arr;\n\n        if (b64.length % 4 > 0) {\n            throw new Error('Invalid string. Length must be a multiple of 4')\n        }\n\n        // the number of equal signs (place holders)\n        // if there are two placeholders, than the two characters before it\n        // represent one byte\n        // if there is only one, then the three characters before it represent 2 bytes\n        // this is just a cheap hack to not do indexOf twice\n        var len = b64.length;\n        placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0;\n\n        // base64 is 4/3 + up to two characters of the original data\n        arr = new Arr(b64.length * 3 / 4 - placeHolders);\n\n        // if there are placeholders, only get up to the last complete 4 chars\n        l = placeHolders > 0 ? b64.length - 4 : b64.length;\n\n        var L = 0;\n\n        function push (v) {\n            arr[L++] = v\n        }\n\n        for (i = 0, j = 0; i < l; i += 4, j += 3) {\n            tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3));\n            push((tmp & 0xFF0000) >> 16);\n            push((tmp & 0xFF00) >> 8);\n            push(tmp & 0xFF)\n        }\n\n        if (placeHolders === 2) {\n            tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4);\n            push(tmp & 0xFF)\n        } else if (placeHolders === 1) {\n            tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2);\n            push((tmp >> 8) & 0xFF);\n            push(tmp & 0xFF)\n        }\n\n        return arr\n    }\n\n    function uint8ToBase64 (uint8) {\n        var i,\n            extraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n            output = \"\",\n            temp, length;\n\n        function encode (num) {\n            return lookup.charAt(num)\n        }\n\n        function tripletToBase64 (num) {\n            return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n        }\n\n        // go through the array every three bytes, we'll deal with trailing stuff later\n        for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n            temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n            output += tripletToBase64(temp)\n        }\n\n        // pad the end with zeros, but make sure to not forget the extra bytes\n        switch (extraBytes) {\n            case 1:\n                temp = uint8[uint8.length - 1];\n                output += encode(temp >> 2);\n                output += encode((temp << 4) & 0x3F);\n                output += '==';\n                break;\n            case 2:\n                temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1]);\n                output += encode(temp >> 10);\n                output += encode((temp >> 4) & 0x3F);\n                output += encode((temp << 2) & 0x3F);\n                output += '=';\n                break\n        }\n\n        return output\n    }\n\n    exports.toByteArray = b64ToByteArray;\n    exports.fromByteArray = uint8ToBase64;\n}(Base64));\n\nexport { Base64 };","/*\n * Copyright 2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Base64 } from './base64'\n\nconst settings = {\n    host: null,\n    apiUrl: null,\n};\n\nfunction bufferDecode(value) {\n    return Uint8Array.from(atob(value), c => c.charCodeAt(0));\n}\n\nfunction bufferEncode(value) {\n    return Base64.fromByteArray(value)\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\")\n        .replace(/=/g, \"\");\n}\n\n\nfunction processError(e) {\n    console.log(e.toString());\n}\n\nfunction startRegistration(login) {\n    const targetUrl = settings.apiUrl + 'register/challenge/' + login;\n    fetch(targetUrl, {\n        credentials: 'include'\n    })\n        .then((res) => {\n            res.json().then((challenge) => processRegisterChallenge(challenge)).catch(processError);\n        })\n        .catch(processError);\n}\n\nfunction processRegisterChallenge(challenge) {\n    console.log('received message ' + JSON.stringify(challenge));\n    challenge.challenge = bufferDecode(challenge.challenge.value);\n    challenge.user.id = bufferDecode(challenge.user.id);\n    console.log('converted message ' + JSON.stringify(challenge));\n\n    navigator.credentials.create({\n        publicKey: challenge,\n    }).then((credential) => {\n        register(credential);\n    }).catch((e) => {\n            console.log(e.toString());\n        }\n    );\n}\n\nfunction register(credential) {\n\n    const attestationObject = new Uint8Array(credential.response.attestationObject);\n    const clientDataJSON = new Uint8Array(credential.response.clientDataJSON);\n    const rawId = new Uint8Array(credential.rawId);\n\n    const postData = {\n        id: credential.id,\n        rawId: bufferEncode(rawId),\n        type: credential.type,\n        response: {\n            attestationObject: bufferEncode(attestationObject),\n            clientDataJSON: bufferEncode(clientDataJSON),\n        },\n    };\n    console.log('registering credentials ', postData);\n    const targetUrl = settings.apiUrl + 'register/credential/';\n    fetch(targetUrl, {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postData),\n    }).then(res => {\n        console.log(res)\n    }).catch(processError);\n}\n\nfunction startLogin(login) {\n    const targetUrl = settings.apiUrl + 'login/challenge/' + login;\n    fetch(targetUrl, {credentials: 'include'})\n        .then((res) => {\n            res.json().then((challenge) => processLoginChallenge(challenge)).catch(processError);\n        })\n        .catch(processError);\n}\n\nfunction processLoginChallenge(challenge) {\n\n    challenge.challenge = bufferDecode(challenge.challenge.value);\n    challenge.allowCredentials.forEach(function (allowCredential, i) {\n            allowCredential.id = bufferDecode(allowCredential.id);\n        }\n    );\n    console.log('login challenge', challenge);\n\n    navigator.credentials.get({\n        publicKey: challenge,\n    }).then((assertion) => {\n        assert(assertion);\n    }).catch((e) => {\n            console.log(e.toString());\n        }\n    )\n}\n\nfunction assert(assertion) {\n\n    console.log('assertion ',assertion);\n\n    const authenticatorData = new Uint8Array(assertion.response.authenticatorData);\n    const clientDataJSON = new Uint8Array(assertion.response.clientDataJSON);\n    const signature = new Uint8Array(assertion.response.signature);\n    const userHandle = new Uint8Array(assertion.response.userHandle);\n    const rawId = new Uint8Array(assertion.rawId);\n\n\n    const postData = {\n        id: assertion.id,\n        rawId: bufferEncode(rawId),\n        type: assertion.type,\n        response: {\n            authenticatorData: bufferEncode(authenticatorData),\n            clientDataJSON: bufferEncode(clientDataJSON),\n            signature: bufferEncode(signature),\n            userHandle: bufferEncode(userHandle),\n        },\n    };\n\n\n    const targetUrl = settings.apiUrl + 'login/credential/';\n\n    fetch(targetUrl, {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postData),\n    }).then(res => {\n        console.log(res)\n    }).catch(processError);\n}\n\n\n\nfunction init(initSettings) {\n    settings.host = initSettings.host;\n    settings.apiUrl = settings.host + '/webauthn/v1/';\n}\n\nexport {startRegistration, startLogin, init}","/*\n * Copyright 2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as webauthn from './webauthn'\n\nconsole.log(webauthn);\n\n\nconst settings = {\n    host : null,\n};\n\nfunction init(initSettings) {\n    settings.host = initSettings.host;\n    console.log('passworless init with settings: ', settings);\n    webauthn.init(settings);\n}\n\n\nexport {init, webauthn};"]}